// === –ì–æ–¥ –≤ —Ñ—É—Ç–µ—Ä–µ ===
document.getElementById('year').textContent = new Date().getFullYear();

// === –¢—ë–º–Ω–∞—è —Ç–µ–º–∞ (—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è) ===
const body = document.body;
const themeBtn = document.getElementById('themeBtn');
const THEME_KEY = 'andrey_theme';

// –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
const saved = localStorage.getItem(THEME_KEY);
if (saved === 'dark') {
  body.classList.add('dark');
  themeBtn.textContent = '‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞';
  themeBtn.setAttribute('aria-pressed', 'true');
}

themeBtn.addEventListener('click', () => {
  const isDark = body.classList.toggle('dark');
  localStorage.setItem(THEME_KEY, isDark ? 'dark' : 'light');
  themeBtn.textContent = isDark ? '‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞' : 'üåô –¢—ë–º–Ω–∞—è —Ç–µ–º–∞';
  themeBtn.setAttribute('aria-pressed', String(isDark));
});

// === ¬´–ü—Ä–∏–≤–µ—Ç, –ê–Ω–¥—Ä–µ–π¬ª ‚Äî —Å–º–µ–Ω–∞ —Ñ—Ä–∞–∑ ===
const greetBtn = document.getElementById('greetBtn');
const helloText = document.getElementById('helloText');

const phrases = [
  '–ü—Ä–∏–≤–µ—Ç, –ê–Ω–¥—Ä–µ–π! üöÄ –ü–æ–µ—Ö–∞–ª–∏!',
  '–î–µ–ª–∞–µ–º –º–∞–ª–µ–Ω—å–∫–∏–µ —à–∞–≥–∏, –Ω–æ –∫–∞–∂–¥—ã–π ‚Äî –≤–ø–µ—Ä—ë–¥ üí™',
  '–°–µ–≥–æ–¥–Ω—è +1 —Ñ–∏—á–∞. –ó–∞–≤—Ç—Ä–∞ ‚Äî +–µ—â—ë –æ–¥–Ω–∞. –¢–∞–∫ –ø–æ–±–µ–∂–¥–∞—é—Ç!',
  '–ò–ò ‚Äî –Ω–∞–ø–∞—Ä–Ω–∏–∫. –†–µ—à–µ–Ω–∏—è ‚Äî —Ç–≤–æ–∏. ‚ú®',
];
let idx = 0;

greetBtn.addEventListener('click', () => {
  helloText.textContent = phrases[idx];
  idx = (idx + 1) % phrases.length;
});

// === –°—Ç—Ä–∏–∫ (—Å–µ—Ä–∏—è –¥–Ω–µ–π) ===
const streakValue = document.getElementById('streakValue');
const streakBtn   = document.getElementById('streakBtn');

const STREAK_COUNT_KEY = 'andrey_streak_count';
const STREAK_DATE_KEY  = 'andrey_streak_date';

function yyyymmdd(d) {
  const y = d.getFullYear();
  const m = String(d.getMonth() + 1).padStart(2, '0');
  const day = String(d.getDate()).padStart(2, '0');
  return `${y}-${m}-${day}`;
}

function loadStreak() {
  const count = Number(localStorage.getItem(STREAK_COUNT_KEY) || 0);
  streakValue.textContent = count;
}
loadStreak();

// === Toast (–Ω–µ–Ω–∞–≤—è–∑—á–∏–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ) ===
function showToast(message, timeout = 1800) {
  const t = document.createElement('div');
  t.className = 'toast';
  t.textContent = message;
  document.body.appendChild(t);
  // –ø–æ–∫–∞–∑–∞—Ç—å –≤ —Å–ª–µ–¥—É—é—â–µ–º –∫–∞–¥—Ä–µ
  requestAnimationFrame(() => t.classList.add('show'));
  // —É–±—Ä–∞—Ç—å —á–µ—Ä–µ–∑ timeout
  setTimeout(() => {
    t.classList.remove('show');
    setTimeout(() => t.remove(), 250);
  }, timeout);
}


streakBtn.addEventListener('click', () => {
  const today = yyyymmdd(new Date());
  const last  = localStorage.getItem(STREAK_DATE_KEY);
  let count   = Number(localStorage.getItem(STREAK_COUNT_KEY) || 0);

  if (last === today) {
  showToast('–°–µ–≥–æ–¥–Ω—è —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω–æ ‚úÖ');
  return;
}


  // –µ—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–Ω—å ‚Äî –≤—á–µ—Ä–∞, —Ç–æ —Å–µ—Ä–∏—è –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è, –∏–Ω–∞—á–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–∞–Ω–æ–≤–æ
  const yesterday = (() => {
    const d = new Date();
    d.setDate(d.getDate() - 1);
    return yyyymmdd(d);
  })();

  if (last === yesterday) {
    count += 1;
  } else {
    count = 1; // –Ω–æ–≤–∞—è —Å–µ—Ä–∏—è
  }

  localStorage.setItem(STREAK_COUNT_KEY, String(count));
  localStorage.setItem(STREAK_DATE_KEY, today);
  streakValue.textContent = count;
  streakValue.textContent = count;
showToast(`–ó–∞—Å—á–∏—Ç–∞–Ω–æ! üî• –°–µ—Ä–∏—è: ${count}`);

});

