// === –ì–æ–¥ –≤ —Ñ—É—Ç–µ—Ä–µ ===
document.getElementById('year').textContent = new Date().getFullYear();

// === –¢—ë–º–Ω–∞—è —Ç–µ–º–∞ (—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è) ===
const body = document.body;
const themeBtn = document.getElementById('themeBtn');
const THEME_KEY = 'andrey_theme';

// –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–µ–º—ã
const savedTheme = localStorage.getItem(THEME_KEY);
if (savedTheme === 'dark') {
  body.classList.add('dark');
  themeBtn.textContent = '‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞';
  themeBtn.setAttribute('aria-pressed', 'true');
}

themeBtn.addEventListener('click', () => {
  const isDark = body.classList.toggle('dark');
  localStorage.setItem(THEME_KEY, isDark ? 'dark' : 'light');
  themeBtn.textContent = isDark ? '‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞' : 'üåô –¢—ë–º–Ω–∞—è —Ç–µ–º–∞';
  themeBtn.setAttribute('aria-pressed', String(isDark));
});

// === ¬´–ü—Ä–∏–≤–µ—Ç, –ê–Ω–¥—Ä–µ–π¬ª ‚Äî —Å–º–µ–Ω–∞ —Ñ—Ä–∞–∑ ===
const greetBtn = document.getElementById('greetBtn');
const helloText = document.getElementById('helloText');

const phrases = [
  '–ü—Ä–∏–≤–µ—Ç, –ê–Ω–¥—Ä–µ–π! üöÄ –ü–æ–µ—Ö–∞–ª–∏!',
  '–î–µ–ª–∞–µ–º –º–∞–ª–µ–Ω—å–∫–∏–µ —à–∞–≥–∏, –Ω–æ –∫–∞–∂–¥—ã–π ‚Äî –≤–ø–µ—Ä—ë–¥ üí™',
  '–°–µ–≥–æ–¥–Ω—è +1 —Ñ–∏—á–∞. –ó–∞–≤—Ç—Ä–∞ ‚Äî +–µ—â—ë –æ–¥–Ω–∞. –¢–∞–∫ –ø–æ–±–µ–∂–¥–∞—é—Ç!',
  '–ò–ò ‚Äî –Ω–∞–ø–∞—Ä–Ω–∏–∫. –†–µ—à–µ–Ω–∏—è ‚Äî —Ç–≤–æ–∏. ‚ú®',
];
let idx = 0;

// === –¢–æ—Å—Ç (–Ω–µ–Ω–∞–≤—è–∑—á–∏–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ) ===
function showToast(message, timeout = 1800) {
  const t = document.createElement('div');
  t.className = 'toast';
  t.textContent = message;
  document.body.appendChild(t);
  requestAnimationFrame(() => t.classList.add('show'));
  setTimeout(() => {
    t.classList.remove('show');
    setTimeout(() => t.remove(), 250);
  }, timeout);
}

// === –í—Å–ø–æ–º–æ–≥–∞–ª–∫–∏ –¥–ª—è –¥–∞—Ç ===
function yyyymmdd(d) {
  const y = d.getFullYear();
  const m = String(d.getMonth() + 1).padStart(2, '0');
  const day = String(d.getDate()).padStart(2, '0');
  return `${y}-${m}-${day}`;
}
function yesterdayStr() {
  const d = new Date();
  d.setDate(d.getDate() - 1);
  return yyyymmdd(d);
}

// ===== –°—Ç—Ä–∏–∫ (—Å–µ—Ä–∏—è –¥–Ω–µ–π) =====
const streakValue = document.getElementById('streakValue');
const streakBtn   = document.getElementById('streakBtn');
const STREAK_COUNT_KEY = 'andrey_streak_count';
const STREAK_DATE_KEY  = 'andrey_streak_date';

function yyyymmdd(d) {
  const y = d.getFullYear();
  const m = String(d.getMonth() + 1).padStart(2, '0');
  const day = String(d.getDate()).padStart(2, '0');
  return `${y}-${m}-${day}`;
}
function todayStr()      { return yyyymmdd(new Date()); }
function yesterdayStr()  { const d=new Date(); d.setDate(d.getDate()-1); return yyyymmdd(d); }

function pluralDays(n){
  const a = n % 10, b = n % 100;
  if (a === 1 && b !== 11) return '–¥–µ–Ω—å';
  if (a >= 2 && a <= 4 && (b < 10 || b >= 20)) return '–¥–Ω—è';
  return '–¥–Ω–µ–π';
}

function renderStreak(){
  const count = Number(localStorage.getItem(STREAK_COUNT_KEY) || 0);
  streakValue.textContent = count;
  const w = document.getElementById('streakWord');
  if (w) w.textContent = pluralDays(count);

  // –ø–æ–∫–∞–∑–∞—Ç—å –æ—Ç–ª–∞–¥–∫—É, –µ—Å–ª–∏ ?debug=1
  const dbgOn = location.search.includes('debug=1');
  const dbg = document.getElementById('streakDebug');
  if (dbg) {
    if (dbgOn) {
      const last = localStorage.getItem(STREAK_DATE_KEY) || '‚Äî';
      dbg.style.display = '';
      dbg.textContent = `DEBUG: count=${count}, last=${last}, today=${todayStr()}, yesterday=${yesterdayStr()}`;
    } else {
      dbg.style.display = 'none';
    }
  }
}

function showToast(message, timeout = 1800) {
  const t = document.createElement('div');
  t.className = 'toast';
  t.textContent = message;
  document.body.appendChild(t);
  requestAnimationFrame(() => t.classList.add('show'));
  setTimeout(() => {
    t.classList.remove('show');
    setTimeout(() => t.remove(), 250);
  }, timeout);
}

/** –ó–∞—Å—á–∏—Ç–∞—Ç—å —Å–µ—Ä–∏—é –∑–∞ —Å–µ–≥–æ–¥–Ω—è
 *  –ø—Ä–∞–≤–∏–ª–æ: last=today -> —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω–æ;
 *           last=yesterday -> +1;
 *           –∏–Ω–∞—á–µ -> 1 (—Å—Ç–∞—Ä—Ç –∑–∞–Ω–æ–≤–æ)
 */
function markStreakToday(){
  const today = todayStr();
  const last  = localStorage.getItem(STREAK_DATE_KEY);
  let count   = Number(localStorage.getItem(STREAK_COUNT_KEY) || 0);

  if (last === today) {
    showToast('–°–µ–≥–æ–¥–Ω—è —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω–æ ‚úÖ');
    return;
  }
  if (last === yesterdayStr()) {
    count = Math.max(1, count) + 1; // –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
  } else {
    count = 1;
  }

  localStorage.setItem(STREAK_COUNT_KEY, String(count));
  localStorage.setItem(STREAK_DATE_KEY, today);
  renderStreak();
  showToast(`–ó–∞—Å—á–∏—Ç–∞–Ω–æ! üî• –°–µ—Ä–∏—è: ${count}`);
}

// –ö–Ω–æ–ø–∫–∞
if (streakBtn) {
  streakBtn.addEventListener('click', markStreakToday);
}

// –ü–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
renderStreak();
