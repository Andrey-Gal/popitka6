// === –ì–æ–¥ –≤ —Ñ—É—Ç–µ—Ä–µ ===
document.getElementById('year').textContent = new Date().getFullYear();

// === –¢—ë–º–Ω–∞—è —Ç–µ–º–∞ ===
const body = document.body;
const themeBtn = document.getElementById('themeBtn');
const THEME_KEY = 'andrey_theme';

const savedTheme = localStorage.getItem(THEME_KEY);
if (savedTheme === 'dark') {
  body.classList.add('dark');
  if (themeBtn) {
    themeBtn.textContent = '‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞';
    themeBtn.setAttribute('aria-pressed', 'true');
  }
}
themeBtn?.addEventListener('click', () => {
  const isDark = body.classList.toggle('dark');
  localStorage.setItem(THEME_KEY, isDark ? 'dark' : 'light');
  themeBtn.textContent = isDark ? '‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞' : 'üåô –¢—ë–º–Ω–∞—è —Ç–µ–º–∞';
  themeBtn.setAttribute('aria-pressed', String(isDark));
});

// === ¬´–ü—Ä–∏–≤–µ—Ç, –ê–Ω–¥—Ä–µ–π¬ª + –∞–≤—Ç–æ–∑–∞—á—ë—Ç ===
const greetBtn  = document.getElementById('greetBtn');
const helloText = document.getElementById('helloText');
const phrases = [
  '–ü—Ä–∏–≤–µ—Ç, –ê–Ω–¥—Ä–µ–π! üöÄ –ü–æ–µ—Ö–∞–ª–∏!',
  '–î–µ–ª–∞–µ–º –º–∞–ª–µ–Ω—å–∫–∏–µ —à–∞–≥–∏, –Ω–æ –∫–∞–∂–¥—ã–π ‚Äî –≤–ø–µ—Ä—ë–¥ üí™',
  '–°–µ–≥–æ–¥–Ω—è +1 —Ñ–∏—á–∞. –ó–∞–≤—Ç—Ä–∞ ‚Äî +–µ—â—ë –æ–¥–Ω–∞. –¢–∞–∫ –ø–æ–±–µ–∂–¥–∞—é—Ç!',
  '–ò–ò ‚Äî –Ω–∞–ø–∞—Ä–Ω–∏–∫. –†–µ—à–µ–Ω–∏—è ‚Äî —Ç–≤–æ–∏. ‚ú®',
];
let phraseIdx = 0;

// === –£—Ç–∏–ª–∏—Ç—ã ===
function showToast(message, timeout = 1800) {
  const t = document.createElement('div');
  t.className = 'toast';
  t.textContent = message;
  document.body.appendChild(t);
  requestAnimationFrame(() => t.classList.add('show'));
  setTimeout(() => { t.classList.remove('show'); setTimeout(() => t.remove(), 250); }, timeout);
}
function pluralDays(n){
  const a = n % 10, b = n % 100;
  if (a === 1 && b !== 11) return '–¥–µ–Ω—å';
  if (a >= 2 && a <= 4 && (b < 10 || b >= 20)) return '–¥–Ω—è';
  return '–¥–Ω–µ–π';
}

// === –°—Ç—Ä–∏–∫ (—É—Å—Ç–æ–π—á–∏–≤ –∫ —á–∞—Å–æ–≤—ã–º –ø–æ—è—Å–∞–º) ===
const streakValue = document.getElementById('streakValue');
const streakBtn   = document.getElementById('streakBtn');

const STREAK_COUNT_KEY  = 'andrey_streak_count';
const STREAK_DAYNUM_KEY = 'andrey_streak_daynum'; // –Ω–æ–º–µ—Ä —Å—É—Ç–æ–∫ (–º–µ—Å—Ç–Ω–∞—è –ø–æ–ª–Ω–æ—á—å)

// –ù–æ–º–µ—Ä –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–æ–≥–æ –¥–Ω—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —ç–ø–æ—Ö–∏ (–ø–æ–ª–Ω–æ—á—å –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏)
function dayNum(d = new Date()) {
  const x = new Date(d.getTime());
  x.setHours(0, 0, 0, 0);
  return Math.floor(x.getTime() / 86400000);
}

// –ú–∏–≥—Ä–∞—Ü–∏—è —Å–æ —Å—Ç–∞—Ä–æ–≥–æ –∫–ª—é—á–∞ YYYY-MM-DD -> daynum (–µ—Å–ª–∏ –≤–¥—Ä—É–≥ –æ—Å—Ç–∞–ª—Å—è)
(function migrateStreak() {
  const old = localStorage.getItem('andrey_streak_date');
  if (old && !localStorage.getItem(STREAK_DAYNUM_KEY)) {
    const [y, m, dd] = old.split('-').map(Number);
    const dn = dayNum(new Date(y, (m || 1) - 1, dd || 1));
    localStorage.setItem(STREAK_DAYNUM_KEY, String(dn));
    localStorage.removeItem('andrey_streak_date');
  }
})();

function renderStreak() {
  const count = Number(localStorage.getItem(STREAK_COUNT_KEY) || 0);
  streakValue.textContent = count;
  const w = document.getElementById('streakWord');
  if (w) w.textContent = pluralDays(count);

  const dbg = document.getElementById('streakDebug');
  if (dbg) {
    if (location.search.includes('debug=1')) {
      const last = localStorage.getItem(STREAK_DAYNUM_KEY) || '‚Äî';
      dbg.style.display = '';
      dbg.textContent = `DEBUG: count=${count}, lastDay=${last}, todayDay=${dayNum()}`;
    } else {
      dbg.style.display = 'none';
    }
  }
}

/** –ó–∞—Å—á–∏—Ç–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è:
 * last==today   -> —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω–æ
 * last==today-1 -> +1 –∫ —Å–µ—Ä–∏–∏
 * –∏–Ω–∞—á–µ         -> 1 (–Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ)
 */
function markStreakToday() {
  const today = dayNum();
  const last  = Number(localStorage.getItem(STREAK_DAYNUM_KEY));
  let count   = Number(localStorage.getItem(STREAK_COUNT_KEY) || 0);

  if (!Number.isNaN(last)) {
    if (last === today) {
      showToast('–°–µ–≥–æ–¥–Ω—è —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω–æ ‚úÖ');
      return;
    }
    count = (last === today - 1) ? Math.max(1, count) + 1 : 1;
  } else {
    count = 1;
  }

  localStorage.setItem(STREAK_COUNT_KEY, String(count));
  localStorage.setItem(STREAK_DAYNUM_KEY, String(today));
  renderStreak();
  showToast(`–ó–∞—Å—á–∏—Ç–∞–Ω–æ! üî• –°–µ—Ä–∏—è: ${count}`);
}

// –ö–Ω–æ–ø–∫–∏
streakBtn?.addEventListener('click', markStreakToday);
greetBtn?.addEventListener('click', () => {
  if (helloText) {
    helloText.textContent = phrases[phraseIdx];
    phraseIdx = (phraseIdx + 1) % phrases.length;
  }
  markStreakToday();
});

// –ü–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä
renderStreak();

// === –¶–∏—Ç–∞—Ç–∞ –¥–Ω—è ===
// –ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º dayNum, –µ—Å–ª–∏ –æ–Ω —É–∂–µ –æ–±—ä—è–≤–ª–µ–Ω (–¥–ª—è —Å—Ç—Ä–∏–∫–∞)
function dayNum(d = new Date()) {
  const x = new Date(d.getTime());
  x.setHours(0,0,0,0);
  return Math.floor(x.getTime() / 86400000);
}

// –ü–æ–¥–±–æ—Ä–∫–∞ (–º–æ–∂–µ—à—å —Å–º–µ–ª–æ –ø—Ä–∞–≤–∏—Ç—å –∏ –¥–æ–ø–æ–ª–Ω—è—Ç—å)
const QUOTES = [
  '–õ—É—á—à–µ —Å–¥–µ–ª–∞—Ç—å –º–∞–ª–µ–Ω—å–∫—É—é —Ñ–∏—á—É —Å–µ–≥–æ–¥–Ω—è, —á–µ–º –±–æ–ª—å—à—É—é ¬´–∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å¬ª.',
  '–°–µ–∫—Ä–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ ‚Äî –≤ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–µ –ø–æ 15‚Äì30 –º–∏–Ω—É—Ç.',
  '–ß–∏—Å—Ç—ã–π –∫–æ–¥ ‚Äî —ç—Ç–æ –¥–æ–±—Ä–æ—Ç–∞ –∫ —Å–µ–±–µ –∏–∑ –±—É–¥—É—â–µ–≥–æ.',
  '–û—à–∏–±–∫–∏ ‚Äî —ç—Ç–æ –ø–æ–¥—Å–∫–∞–∑–∫–∏. –ß–∏–Ω–∏–º –∏ –∏–¥—ë–º –¥–∞–ª—å—à–µ.',
  '–ì–ª–∞–∑–∞ –Ω–∞–º—ë—Ç–∞–Ω–Ω—ã–µ ‚Äî –±–∞–≥–∏ –∏—Å–ø—É–≥–∞–Ω–Ω—ã–µ üòÑ',
];

const Q_TEXT_ID   = 'qText';
const Q_COPY_ID   = 'qCopy';
const Q_DEBUG_ID  = 'qQuoteDebug';
const Q_DAY_KEY   = 'andrey_quote_daynum';
const Q_INDEX_KEY = 'andrey_quote_index';

function pickQuoteIndex(prev) {
  // —á—Ç–æ–± –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–ª–∞—Å—å –ø–æ–¥—Ä—è–¥ ‚Äî –∫—Ä—É—Ç–∏–º –ø–æ –∫—Ä—É–≥—É
  const next = (typeof prev === 'number') ? (prev + 1) % QUOTES.length : 0;
  return next;
}

function renderQuote() {
  const el = document.getElementById(Q_TEXT_ID);
  if (!el) return;

  const today = dayNum();
  const storedDay  = Number(localStorage.getItem(Q_DAY_KEY));
  let   storedIdx  = localStorage.getItem(Q_INDEX_KEY);
  storedIdx = storedIdx === null ? null : Number(storedIdx);

  let idx;
  if (storedDay === today && typeof storedIdx === 'number') {
    idx = storedIdx;                // —Ç–æ—Ç –∂–µ –¥–µ–Ω—å ‚Äî —Ç–∞ –∂–µ —Ü–∏—Ç–∞—Ç–∞
  } else {
    idx = pickQuoteIndex(storedIdx); // –Ω–æ–≤—ã–π –¥–µ–Ω—å ‚Äî —Å–ª–µ–¥—É—é—â–∞—è
    localStorage.setItem(Q_DAY_KEY, String(today));
    localStorage.setItem(Q_INDEX_KEY, String(idx));
  }

  el.textContent = QUOTES[idx];

  // debug —Å—Ç—Ä–æ–∫–∞ –ø–æ ?debug=1
  const dbgOn = location.search.includes('debug=1');
  const dbg = document.getElementById(Q_DEBUG_ID);
  if (dbg) {
    if (dbgOn) {
      dbg.style.display = '';
      dbg.textContent = `QUOTE DEBUG: idx=${idx}, day=${today}`;
    } else {
      dbg.style.display = 'none';
    }
  }
}

// –ö–Ω–æ–ø–∫–∞ ¬´–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å¬ª
(function wireQuoteCopy(){
  const btn = document.getElementById(Q_COPY_ID);
  const el  = document.getElementById(Q_TEXT_ID);
  if (!btn || !el) return;
  btn.addEventListener('click', async () => {
    try {
      await navigator.clipboard.writeText(el.textContent || '');
      if (typeof showToast === 'function') showToast('–¶–∏—Ç–∞—Ç–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ ‚úÖ');
    } catch {
      if (typeof showToast === 'function') showToast('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å üòÖ');
    }
  });
})();

// –†–µ–Ω–¥–µ—Ä –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
renderQuote();
